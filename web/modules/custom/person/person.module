<?php

/**
 * @file
 * Contains person.module.
 */

use Drupal\imdb\enum\Language;
use Drupal\tmdb\enum\TmdbImageFormat;

/**
 * Implements hook_theme().
 */
function person_theme($existing, $type, $theme, $path): array {
  return [
    'person' => [
      'template' => 'person',
      'file' => 'person.page.inc',
      'render element' => 'elements',
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function person_theme_suggestions_person(array $variables) {
  return [
    "person__{$variables['elements']['#view_mode']}",
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function person_preprocess_person(&$variables) {
  if ($variables['elements']['#view_mode'] === 'full') {
    if (!isset($variables['content']['field_avatar'][0])) {
      /** @var \Drupal\person\Entity\PersonEntity $entity */
      $entity = $variables['elements']['#person'];
      /** @var \Drupal\tmdb\TmdbApiAdapter $adapter */
      $adapter = Drupal::service('tmdb.adapter');
      $person_data = $adapter->getPerson($entity->{'tmdb_id'}->value, Language::en());
      /** @var \Drupal\person\Avatar $person_avatar */
      $person_avatar = Drupal::service('person.avatar');

      // Build "field_avatar" manually if the Person hasn't avatar.
      $variables['content']['field_avatar'] = [
        '#theme' => 'field',
        '#view_mode' => 'full',
        '#field_name' => 'field_avatar',
        '#field_type' => 'tmdb_image',
        '#entity_type' => 'person',
        '#bundle' => 'person',
        '#title' => 'Avatar',
        '#label_display' => 'hidden',
        '#is_multiple' => FALSE,
        0 => $person_avatar->build($person_data, TmdbImageFormat::w400()),
      ];
    }
  }
}
